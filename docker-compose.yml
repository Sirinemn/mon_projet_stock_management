version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  db:
    image: postgres:15
    container_name: stockmanagement-db
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend-network

  # Backend Spring Boot
  backend:
    build: ./stock-management-back
    container_name: stockmanagement-backend
    restart: always
    depends_on:
      - db
    env_file: .env
    environment:
      SPRING_DATASOURCE_URL: ${DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DATASOURCE_PASSWORD}
    ports:
      - "8001:8001"
    networks:
      - backend-network

  # Frontend Angular (Nginx)
  frontend:
    build: ./stock-management-front
    container_name: stockmanagement-frontend
    restart: always
    ports:
      - "80:80"
    networks:
      - backend-network

volumes:
  pgdata:

networks:
  backend-network:
    driver: bridge