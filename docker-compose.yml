version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: stock-postgres
    environment:
      POSTGRES_DB: stockdb
      POSTGRES_USER: ${DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${DATASOURCE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATASOURCE_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
    container_name: stockmanagement-backend
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8001:8001"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DATASOURCE_URL: jdbc:postgresql://postgres:5432/stockdb
      DATASOURCE_USERNAME: ${DATASOURCE_USERNAME}
      DATASOURCE_PASSWORD: ${DATASOURCE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      LOGIN_URL: https://stock-zen.fr
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_SUPPORT: ${MAIL_SUPPORT}
      MONITOR_EMAIL: ${MONITOR_EMAIL}
      MONITOR_FIRSTNAME: ${MONITOR_FIRSTNAME}
      MONITOR_LASTNAME: ${MONITOR_LASTNAME}
      MONITOR_PASSWORD: ${MONITOR_PASSWORD}
      MONITOR_GROUP: ${MONITOR_GROUP}
      MONITOR_ROLE: ${MONITOR_ROLE}
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8001/api/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 512M
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
    container_name: stock-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
